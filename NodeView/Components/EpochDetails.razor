@using Radzen.Blazor.Rendering;
@using SharedService;
@using LitContracts.Staking.ContractDefinition;
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<div class="card border-primary">
  <div class="card-header  ">
    <div class="row no-gutters">
      <div class="col">
        Epoch Details
        </div>
    </div>
  </div>
  <div class="card-body p-0">
    <div class="row">
      <div class="col"> 

<RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="20" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
    Data="@epoch_details" TItem="EpochDetail" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or">
    <Columns>       
        <RadzenDataGridColumn TItem="EpochDetail" Property="name" Title="Name" Width="30%" />
        <RadzenDataGridColumn TItem="EpochDetail" Property="value" Title="Value" Width="70%" />
    </Columns>
</RadzenDataGrid>  


      </div>
    </div>
  </div>
</div>

@code {
    [Parameter]    
    public LitContracts.Staking.ContractDefinition.Epoch? epoch_return_value { get; set;}

    struct EpochDetail
    {
        public string name { get; set; }
        public string value { get; set; }
    }
    private List<EpochDetail>? epoch_details = null;

    protected override void OnParametersSet()
    {      
        var e = epoch_return_value;
        if (e == null)
          {
            return;
          }

        epoch_details = new List<EpochDetail>();
        epoch_details.Add(new EpochDetail { name = "EpochLength", value = e.EpochLength.ToString() });
        epoch_details.Add(new EpochDetail { name = "Number", value = e.Number.ToString() });
        epoch_details.Add(new EpochDetail { name = "EndTime", value = e.EndTime.ToString() });
        epoch_details.Add(new EpochDetail { name = "Retries", value = e.Retries.ToString() });
        epoch_details.Add(new EpochDetail { name = "Timeout", value = e.Timeout.ToString() });
    }
}